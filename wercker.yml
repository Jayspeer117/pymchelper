# This references the default Python container from
# the Docker Hub with the 2.7 tag:
# https://registry.hub.docker.com/_/python/
# If you want to use a slim Python container with
# version 3.4.3 you would use: python:3.4-slim
# If you want Google's container you would reference google/python
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: python:2.7
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:

    - script:
        name: install
        code: |
          echo "137"
          sudo apt-get update
          sudo apt-get install -qq -y --no-install-recommends libfreetype6-dev pkg-config

    # A step that sets up the python virtual environment
    - virtualenv:
        name: setup virtual environment
        install_wheel: false # Enable wheel to speed up builds (experimental)

    # # Use this virtualenv step for python 3.2
    # - virtualenv
    #     name: setup virtual environment
    #     python_location: /usr/bin/python3.2

    # A step that executes `pip install` command.
#    - pip-install:
#        requirements_file: "requirements.txt"
#        extra_args: "-rtests/requirements-test.txt"

    # # This pip-install clears the local wheel cache
    # - pip-install:
    #     clean_wheel_dir: true

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo python information
        code: |
          echo "python version $(python --version) running"
          echo "pip version $(pip --version) running"

#    - script:
#        name: test
#        code: |
#          tox -e py27

build_debian_8_jessie_py3:
  box: debian:jessie

  steps:
  
    - script:
        name: prerequisites1
        code: |
          sudo apt-get update
          sudo apt-get install -qq -y --no-install-recommends python3-pip  wget git debhelper python3-all-dev python-all fakeroot gcc build-essential openssh-client reprepro
          python3 -V
          pip3 -V

    - add-ssh-key:
         keyname: GH

    - add-to-known_hosts:
        hostname: github.com
        fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48
        type: rsa
          
    - script:
        name: package
        code: |
          pwd
          ls -al
          git tag -l --points-at HEAD
          pip3 install stdeb versioneer
          versioneer install
          python3 setup.py --command-packages=stdeb.command bdist_deb
          ls -al
          ls -al deb_dist/python3*deb
          mkdir 1
          cd 1/
          git clone git@github.com:grzanka/testGHP.git
          ls -al .
          cp ../deb_dist/python3*deb testGHP/
          cd testGHP/
          git config --global user.email "leszek.grzanka@gmail.com"
          git config --global user.name "Leszek Grzanka"
          cd myrepo
          reprepro includedeb wheezy ../*.deb
          cd ..
          git add -A
          git commit -m "deb files"
          git push
          